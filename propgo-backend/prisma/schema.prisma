// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum UserRole {
  USER
  ADMIN
}

enum PropertyType {
  APARTMENT
  HOUSE
  LAND
  PLOT
  SHOP
}

enum Authority {
  GOVERNMENT
  PRIVATE
  BUILDER
}

enum ListingFor {
  SALE
  RENT
}

enum PropertyCategory {
  RESIDENTIAL
  COMMERCIAL
}

enum AreaUnit {
  SQFT
  SQ_YARDS
  SQ_METERS
  ACRES
  HECTARES
}

enum HouseType {
  INDEPENDENT_HOUSE
  VILLA
  DUPLEX
  ROW_HOUSE
}

//------------------------------------------------------------------------------
// Models

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  password  String
  name      String?
  phone     String?
  role      UserRole @default(USER)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  
  // Relations
  refreshTokens RefreshToken[]
  listings      Listing[]

  @@index([email])
}

model RefreshToken {
  id        String   @id @default(cuid())
  token     String   @unique
  userId    String
  expiresAt DateTime
  createdAt DateTime @default(now())
  
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  
  
  @@index([userId])
  @@index([token])
}


model Listing {
  id             String            @id @default(cuid())
  userId         String
  
  // Basic Information
  typeOfProperty PropertyType
  authority      Authority
  listingFor     ListingFor
  category       PropertyCategory?
  title          String
  description    String            @db.Text
  verified       Boolean           @default(false)
  
  // Location
  address        String
  society        String?
  areaLocality   String
  city           String
  district       String
  state          String
  pincode        String
  latitude       Float?
  longitude      Float?
  
  // Area & Pricing
  area           Float
  areaUnit       AreaUnit
  pricePerUnit   Float?
  totalPrice     Float?
  
  // Layout (for APARTMENT/HOUSE)
  floor              Int?
  numberOfFloors     Int?
  rooms              Int?
  bathrooms          Int?
  balconies          Int?
  yearOfConstruction Int?
  
  // Amenities (stored as JSON array)
  amenities String[] @default([])
  
  // Timestamps
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  
  // Relations
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
  
  @@index([userId])
  @@index([city])
  @@index([typeOfProperty])
  @@index([listingFor])
  @@index([verified])
  @@index([createdAt])
}

